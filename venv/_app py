from openai import OpenAI
import os
import base64
from flask import Flask, request, jsonify
from flask_cors import CORS
from dotenv import load_dotenv

load_dotenv()

client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))

app = Flask(__name__)
CORS(app, origins=["http://localhost:8080"])

@app.route('/analyze', methods=['POST'])
def analyze_image():
    image = request.files.get('image')
    # image1 = request.files.get("image1")
    # image2 = request.files.get("image2")
    # image3 = request.files.get("image3")
    if not image:
        return jsonify({'error': '画像が必要です'}), 400

    base64_image = base64.b64encode(image.read()).decode('utf-8')
    prompt = "この画像に何が写っていますか？"

    try:
        response = client.chat.completions.create(
            model="gpt-4o",
            messages=[
                {
                    "role": "user",
                    "content": [
                        {"type": "text", "text": prompt},
                        {"type": "image_url", "image_url": {
                            "url": f"data:image/png;base64,{base64_image}"
                        }},
                    ],
                }
            ],
            max_tokens=1000
        )

        result = response.choices[0].message.content
        return jsonify({'result': result})

    except Exception as e:
        return jsonify({'error': str(e)}), 500

if __name__ == '__main__':
    app.run(debug=True)